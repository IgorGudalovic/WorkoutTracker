{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\igorg\\\\Desktop\\\\New folder\\\\training-tracker\\\\src\\\\components\\\\CalendarView.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport Calendar from 'react-calendar';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { UserContext } from '../context/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CalendarView = () => {\n  _s();\n  const [trainings, setTrainings] = useState([]);\n  const {\n    user\n  } = useContext(UserContext);\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!user) {\n      navigate('/login');\n      return;\n    }\n    const fetchTrainings = async () => {\n      try {\n        const response = await axios.get('https://localhost:7115/api/WorkoutRecord', {\n          headers: {\n            Authorization: `Bearer ${user.token}`\n          }\n        });\n        setTrainings(response.data);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchTrainings();\n  }, [user, navigate]);\n  const getTileContent = ({\n    date,\n    view\n  }) => {\n    if (view === 'month') {\n      const formattedDate = date.toISOString().split('T')[0];\n      const training = trainings.find(t => t.WorkoutDate.startsWith(formattedDate));\n      return training ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: training.WorkoutType\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }, this) : null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Calendar, {\n      tileContent: getTileContent\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => navigate('/add-training'),\n      children: \"Add Training\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(CalendarView, \"bIHbCrI99RNc3UbK8JECP4aMvx0=\", false, function () {\n  return [useNavigate];\n});\n_c = CalendarView;\nexport default CalendarView;\nvar _c;\n$RefreshReg$(_c, \"CalendarView\");","map":{"version":3,"names":["React","useState","useEffect","useContext","Calendar","useNavigate","axios","UserContext","jsxDEV","_jsxDEV","CalendarView","_s","trainings","setTrainings","user","navigate","fetchTrainings","response","get","headers","Authorization","token","data","error","console","getTileContent","date","view","formattedDate","toISOString","split","training","find","t","WorkoutDate","startsWith","children","WorkoutType","fileName","_jsxFileName","lineNumber","columnNumber","tileContent","onClick","_c","$RefreshReg$"],"sources":["C:/Users/igorg/Desktop/New folder/training-tracker/src/components/CalendarView.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport Calendar from 'react-calendar';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { UserContext } from '../context/UserContext';\r\n\r\nconst CalendarView = () => {\r\n  const [trainings, setTrainings] = useState([]);\r\n  const { user } = useContext(UserContext);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (!user) {\r\n      navigate('/login');\r\n      return;\r\n    }\r\n    const fetchTrainings = async () => {\r\n      try {\r\n        const response = await axios.get('https://localhost:7115/api/WorkoutRecord', {\r\n          headers: { Authorization: `Bearer ${user.token}` },\r\n        });\r\n        setTrainings(response.data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    fetchTrainings();\r\n  }, [user, navigate]);\r\n\r\n  const getTileContent = ({ date, view }) => {\r\n    if (view === 'month') {\r\n      const formattedDate = date.toISOString().split('T')[0];\r\n      const training = trainings.find((t) => t.WorkoutDate.startsWith(formattedDate));\r\n      return training ? <div>{training.WorkoutType}</div> : null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Calendar tileContent={getTileContent} />\r\n      <button onClick={() => navigate('/add-training')}>Add Training</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CalendarView;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAOC,QAAQ,MAAM,gBAAgB;AACrC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM;IAAEa;EAAK,CAAC,GAAGX,UAAU,CAACI,WAAW,CAAC;EACxC,MAAMQ,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9BH,SAAS,CAAC,MAAM;IACd,IAAI,CAACY,IAAI,EAAE;MACTC,QAAQ,CAAC,QAAQ,CAAC;MAClB;IACF;IACA,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAG,CAAC,0CAA0C,EAAE;UAC3EC,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUN,IAAI,CAACO,KAAK;UAAG;QACnD,CAAC,CAAC;QACFR,YAAY,CAACI,QAAQ,CAACK,IAAI,CAAC;MAC7B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC;IACDP,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACF,IAAI,EAAEC,QAAQ,CAAC,CAAC;EAEpB,MAAMU,cAAc,GAAGA,CAAC;IAAEC,IAAI;IAAEC;EAAK,CAAC,KAAK;IACzC,IAAIA,IAAI,KAAK,OAAO,EAAE;MACpB,MAAMC,aAAa,GAAGF,IAAI,CAACG,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACtD,MAAMC,QAAQ,GAAGnB,SAAS,CAACoB,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACC,WAAW,CAACC,UAAU,CAACP,aAAa,CAAC,CAAC;MAC/E,OAAOG,QAAQ,gBAAGtB,OAAA;QAAA2B,QAAA,EAAML,QAAQ,CAACM;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,GAAG,IAAI;IAC5D;EACF,CAAC;EAED,oBACEhC,OAAA;IAAA2B,QAAA,gBACE3B,OAAA,CAACL,QAAQ;MAACsC,WAAW,EAAEjB;IAAe;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzChC,OAAA;MAAQkC,OAAO,EAAEA,CAAA,KAAM5B,QAAQ,CAAC,eAAe,CAAE;MAAAqB,QAAA,EAAC;IAAY;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpE,CAAC;AAEV,CAAC;AAAC9B,EAAA,CArCID,YAAY;EAAA,QAGCL,WAAW;AAAA;AAAAuC,EAAA,GAHxBlC,YAAY;AAuClB,eAAeA,YAAY;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}